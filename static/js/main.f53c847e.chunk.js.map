{"version":3,"sources":["assets/images/orb.gif","components/contacts/Contact.js","store/actions/contact.actions.js","store/actions/_types.actions.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","store/reducers/contact.reducer.js","store/reducers/_index.reducers.js","store/store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Contact","state","showContactInfo","onDeleteClick","id","_this","props","deleteContact","_this2","this","_this$props$contact","contact","name","email","phone","react_default","a","createElement","className","onClick","setState","style","cursor","float","color","bind","Link","to","concat","marginRight","Component","connect","_ref5","Object","asyncToGenerator","regenerator_default","mark","_callee5","dispatch","wrap","_context5","prev","next","axios","delete","t0","console","log","type","payload","finish","stop","_x5","apply","arguments","Contacts","getContacts","contacts","Fragment","map","contacts_Contact","key","_ref","_callee","res","_context","get","sent","data","_x","TextInputGroup","label","value","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","hasErrors","abrupt","addContact","history","push","defineProperty","target","trim","_this$state2","layout_TextInputGroup","_ref3","_callee3","_context3","post","_x3","EditContact","updContact","match","params","updateContact","nextProps","nextState","_nextProps$contact","getContact","_ref2","_callee2","_context2","_x2","_ref4","_callee4","_context4","put","_x4","Header","branding","href","About","NotFound","Test","loading","posts","fetch","then","response","json","marginTop","window","innerHeight","src","alt","body","initialState","combineReducers","length","undefined","action","objectSpread","toConsumableArray","filter","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","App","es","BrowserRouter","layout_Header","Switch","Route","exact","path","component","Boolean","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f53c847e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/orb.ed236853.gif\";","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { deleteContact } from '../../store/actions/contact.actions';\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onDeleteClick = id => {\n    this.props.deleteContact(id);\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <div className=\"card border-primary mb-3\">\n        <h4 className=\"card-header pb-3 pt-3\"> {name}{' '}\n          <i\n            onClick={() => this.setState({showContactInfo: !this.state.showContactInfo})}\n            className=\"fas fa-sort-down\"\n            style={{ cursor: 'pointer' }} />\n\n          <i\n            className=\"fas fa-times\"\n            style={{ cursor: 'pointer', float: 'right', color: 'red' }}\n            onClick={this.onDeleteClick.bind(this, id)} />\n\n          <Link to={`contact/edit/${id}`}>\n            <i\n              className=\"fa fa-edit text-warning\"\n              style={{cursor: 'pointer', float: 'right', marginRight: '1rem'}} />\n          </Link>\n\n        </h4>\n        {showContactInfo ? (\n          <div className=\"card-body\">\n            <h5 className=\"card-title pb-2 pt-2\">Email: {email}</h5>\n            <p className=\"card-text lead pb-2 pt-2\">Phone: {phone}</p>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n  deleteContact: PropTypes.func.isRequired\n};\n\nexport default connect(null, { deleteContact })(Contact);\n","import { GET_CONTACTS, GET_CONTACT, UPDATE_CONTACT, ADD_CONTACT, DELETE_CONTACT } from './_types.actions';\r\nimport axios from 'axios';\r\n\r\n/**\r\n * These methods only return an object with the action information (type, payload)\r\n * The action 'type' property specified the type of request (e.g add, delete, get, update)\r\n * The action 'payload' property specifies information to mutate (e.g what to delete, what to add) \r\n * */\r\n\r\n/**\r\n * Return a 'GET_CONTACTS' type which triggers the 'GET_CONTACTS' case in contact.reducer\r\n * @returns {Object} -> 'Action' object with the action type and payload (json response data)\r\n */\r\nexport const getContacts = () => async dispatch => {\r\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n    dispatch({\r\n        type: GET_CONTACTS,\r\n        payload: res.data\r\n    });\r\n}\r\n\r\n/**\r\n * Return a 'GET_CONTACT' type which triggers the 'GET_CONTACT' case in contact.reducer\r\n * @returns {Object} -> 'Action' object with the action type and payload (json response data)\r\n */\r\nexport const getContact = id => async dispatch => {\r\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    dispatch({\r\n        type: GET_CONTACT,\r\n        payload: res.data\r\n    });\r\n}\r\n\r\n/**\r\n * Return an 'ADD_CONTACT' type which triggers the 'ADD_CONTACT' case in contact.reducer\r\n * @param {Object} contact -> Contact object to add to contacts array in state\r\n * @returns {Object}       -> 'Action' object with action type and payload data\r\n */\r\nexport const addContact = contact => async dispatch => {\r\n    const res = await axios.post('https://jsonplaceholder.typicode.com/users', contact);\r\n    dispatch({\r\n        type: ADD_CONTACT,\r\n        payload: res.data\r\n    });\r\n}\r\n\r\n/**\r\n * Return an 'UPDATE_CONTACT' type which triggers the 'UPDATE_CONTACT' case in contact.reducer\r\n * @param {Object} contact ->  Updated Contact object\r\n * @returns {Object}       -> 'Action' object with action type and payload data\r\n */\r\nexport const updateContact = (contact, id) => async dispatch => {\r\n    const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, contact);\r\n    console.log(res.data)\r\n    dispatch({\r\n        type: UPDATE_CONTACT,\r\n        payload: res.data\r\n    });\r\n}\r\n\r\n/**\r\n * Return a 'DELETE_CONTACT' type which triggers the 'DELETE_CONTACT' case in contact.reducer\r\n * @param {number} id  -> The id property of the contact object to delete from contacts array in state\r\n * @returns {Object}   -> 'Action' object with the action type and payload (the id of the deleted user)\r\n */\r\nexport const deleteContact = id => async dispatch => {\r\n    // Since jsonplaceholder doesn't actually mutate its data when we make requests\r\n    // we might run into errors when trying to delete contacts that we've added\r\n    try {\r\n        await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    } catch (e) {\r\n        console.log(e);\r\n    } finally {\r\n        // Delete contact from UI anyway\r\n        dispatch({\r\n            type: DELETE_CONTACT,\r\n            payload: id\r\n        });\r\n    }\r\n}","/** \r\n * In this file we could put all action types for all reducers \r\n * */\r\n\r\n // Action types for 'contacts'\r\nexport const GET_CONTACTS = 'GET_CONTACTS';\r\nexport const GET_CONTACT = 'GET_CONTACT';\r\nexport const UPDATE_CONTACT = 'UPDATE_CONTACT';\r\nexport const ADD_CONTACT = 'ADD_CONTACT';\r\nexport const DELETE_CONTACT = 'DELETE_CONTACT';","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types'\nimport { getContacts } from '../../store/actions/contact.actions';\n\nclass Contacts extends Component {\n\n  // Getting store data in this lifecycle method\n  componentDidMount() {\n    this.props.getContacts(); // This will put our store state in props\n  }\n\n  render() {\n    const { contacts } = this.props;\n    return (\n      <React.Fragment>\n        <h1 className=\"display-4 mb-5 mt-5\">\n          <span className=\"text-primary\">Contact</span> List\n        </h1>\n        {contacts.map(contact => (\n          <Contact key={contact.id} contact={contact} />\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n\n// Type checking props\nContacts.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  getContacts: PropTypes.func.isRequired\n};\n\n// Accessing the state, contact -> reducer, contacts -> our contacts array\nconst mapStateToProps = state => ({\n  contacts: state.contact.contacts\n});\n\n// Connects store state to this component\nexport default connect(mapStateToProps, {getContacts})(Contacts);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames('form-control form-control-lg', {\n          'is-invalid': error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n};\n\nexport default TextInputGroup;\n","import React, { Component } from 'react';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addContact } from '../../store/actions/contact.actions';\n\nclass AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  onSubmit = async (e) => {\n    e.preventDefault();\n\n    // Get the current state values (which are equal to input values everytime)\n    const { name, email, phone } = this.state;\n    \n    // Check for input errors, return if has any\n    if(this.hasErrors(name, email, phone)) return;\n\n    // Create a new contact object to add\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n\n    // Add contact to store\n    this.props.addContact(newContact);\n\n    // Clear this component state (input fields)\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    // Redirect to home\n    this.props.history.push('/');\n  };\n\n   // Method to check for input errors\n   hasErrors(name, email, phone) {\n    if(name.trim() === '') {\n        this.setState({errors: { name : 'Name is required' }});\n        return true;\n    }\n    if(email.trim() === '') {\n        this.setState({errors: { email : 'Email is required' }});\n        return true;\n    }\n    if(phone.trim() === '') {\n        this.setState({errors: { phone : 'Phone is required' }});\n        return true;\n    }\n    return false;\n  }\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <div className=\"card mb-3\">\n        <div className=\"card-header\">Add Contact</div>\n        <div className=\"card-body\">\n          <form onSubmit={this.onSubmit}>\n            <TextInputGroup\n              label=\"Name\"\n              name=\"name\"\n              placeholder=\"Enter Name\"\n              value={name}\n              onChange={this.onChange}\n              error={errors.name}\n            />\n            <TextInputGroup\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              value={email}\n              onChange={this.onChange}\n              error={errors.email}\n            />\n            <TextInputGroup\n              label=\"Phone\"\n              name=\"phone\"\n              placeholder=\"Enter Phone\"\n              value={phone}\n              onChange={this.onChange}\n              error={errors.phone}\n            />\n            <input\n              type=\"submit\"\n              value=\"Add Contact\"\n              className=\"btn btn-block btn-outline-primary\"\n            />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddContact.propTypes = {\n  addContact: PropTypes.func.isRequired\n};\n\nexport default connect(null, { addContact })(AddContact);\n","import React, { Component } from 'react';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getContact, updateContact } from '../../store/actions/contact.actions';\n\nclass EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  UNSAFE_componentWillReceiveProps(nextProps, nextState) {\n    const { name, email, phone } = nextProps.contact;\n    this.setState({\n      name, email, phone\n    })\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getContact(id);\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // Check For Errors\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } });\n      return;\n    }\n\n    const updContact = {\n      name,\n      email,\n      phone\n    };\n\n    const { id } = this.props.match.params;\n\n    //// UPDATE CONTACT ////\n    this.props.updateContact(updContact, id)\n\n    // Clear State\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <div className=\"card mb-3\">\n        <div className=\"card-header\">Edit Contact</div>\n        <div className=\"card-body\">\n          <form onSubmit={this.onSubmit}>\n            <TextInputGroup\n              label=\"Name\"\n              name=\"name\"\n              placeholder='Enter name...'\n              value={name}\n              onChange={this.onChange}\n              error={errors.name}\n            />\n            <TextInputGroup\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              placeholder='Enter email...'\n              value={email}\n              onChange={this.onChange}\n              error={errors.email}\n            />\n            <TextInputGroup\n              label=\"Phone\"\n              name=\"phone\"\n              placeholder='Enter phone...'\n              value={phone}\n              onChange={this.onChange}\n              error={errors.phone}\n            />\n            <input\n              type=\"submit\"\n              value=\"Update Contact\"\n              className=\"btn btn-light btn-block\"\n            />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nEditContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n  getContact: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n  contact: state.contact.contact\n});\n\nexport default connect(mapStateToProps, { getContact, updateContact })(EditContact);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-3\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" /> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" /> Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\" /> About\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/test\" className=\"nav-link\">\n                <i className=\"fas fa-wrench\" /> Test\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: 'My App'\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n};\n","import React, { Component } from 'react'\r\nimport loading from '../../assets/images/orb.gif';\r\n\r\nexport default class Test extends Component {\r\n    state = {\r\n        loading: true,\r\n        posts: []\r\n    }\r\n    componentDidMount() {\r\n        console.log('componentDidMount()');\r\n        fetch('https://jsonplaceholder.typicode.com/comments')\r\n            .then(response => response.json())\r\n            .then(data => this.setState({loading: false, posts: data}));\r\n    }\r\n    \r\n    render() {\r\n        console.log('component render()');\r\n        return (\r\n            <div>\r\n                <h2 className=\"mb-4 pt-4 pb-4\">Just a testing component <i className=\"fas fa-wrench\"></i></h2>\r\n                {this.state.loading ? \r\n                    <div id=\"loading-div\" style={{marginTop: `${window.innerHeight / 2 - 300}px`}}>\r\n                        <img src={loading} className=\"img-fluid\" alt=\"loading\" />  \r\n                    </div>\r\n                    :\r\n                    this.state.posts.map(post => (\r\n                    <div key={post.id} className=\"card mb-4\">\r\n                        <div className=\"card-header\">Quote</div>\r\n                        <div className=\"card-body\">\r\n                        <blockquote className=\"blockquote\">\r\n                            <p>{post.body}</p>\r\n                            <footer className=\"blockquote-footer\">{post.email}</footer>\r\n                        </blockquote>\r\n                        </div>\r\n                    </div>))}\r\n            </div>\r\n        )          \r\n    }\r\n}","// Importing constant action type names\r\nimport { GET_CONTACTS, GET_CONTACT, UPDATE_CONTACT, DELETE_CONTACT, ADD_CONTACT } from '../actions/_types.actions';\r\n\r\nconst initialState = {\r\n    contacts: [\r\n        // {\r\n        //   id: 1,\r\n        //   name: 'John Doe',\r\n        //   email: 'john@gmail.com',\r\n        //   phone: '555-555-5555'\r\n        // },\r\n        // {\r\n        //   id: 2,\r\n        //   name: 'Karen Williams',\r\n        //   email: 'karen@gmail.com',\r\n        //   phone: '444-444-4444'\r\n        // },\r\n        // {\r\n        //   id: 3,\r\n        //   name: 'Henry Johnson',\r\n        //   email: 'henry@gmail.com',\r\n        //   phone: '333-333-333'\r\n        // }\r\n    ],\r\n    contact: {}\r\n};\r\n\r\n/**\r\n * This method dictates what to do for each type of request\r\n * @param {Object} state   -> Current state\r\n * @param {Object} action  -> Request information. Will have payload property if action mutates state\r\n */\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n    switch(type) {\r\n        // Replace current state with new state (from api)\r\n        case GET_CONTACTS:\r\n            return {\r\n                ...state,\r\n                contacts: payload\r\n            };\r\n        // Return the given contact in our state contact object which serves as the 'current contact'\r\n        case GET_CONTACT:\r\n            return {\r\n                ...state,\r\n                contact: payload\r\n            };\r\n        // Return a new array of contacts with the updated contact (by checking the payload id with each contact id in contacts)\r\n        case UPDATE_CONTACT:\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => payload.id === contact.id ? contact = payload : contact)\r\n            };\r\n        // Replace current state with same state + newly added contact\r\n        case ADD_CONTACT:\r\n            return {\r\n                ...state,\r\n                contacts: [payload, ...state.contacts]\r\n            };\r\n        // Replace current state with new state leaving out the deleted contact id\r\n        case DELETE_CONTACT:\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact.id !== payload)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","/** \r\n * This file is the 'meeting place' of all our reducers \r\n */\r\n\r\n// Import redux method to combine all of our reducers\r\nimport { combineReducers } from 'redux';\r\n// Import our reducers\r\nimport contactReducer from './contact.reducer';\r\n\r\n// Exporting them using combineReducers()\r\nexport default combineReducers({\r\n    contact: contactReducer,\r\n});","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/_index.reducers';\r\n\r\n// Rquired initial state for store, can be an empty object\r\nconst initialState = {};\r\n\r\n// Middlewares for store\r\nconst middleware = [thunk];\r\n\r\n// Create the store - rootReducer is the combined reducers in reducers/index.js\r\n//                  - compose helps us pass more args to createStore including the window redux dev tools\r\nconst store = createStore(rootReducer, initialState, \r\n    compose(applyMiddleware(...middleware), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));\r\n\r\n\r\n// Export the store - We use it by importing it in the main application component\r\n//                  - Then we pass it down in a <Provider> component as a prop (e.g <Provider store={store}>)\r\nexport default store;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\n\nimport { Provider } from 'react-redux';\nimport store from './store/store';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}